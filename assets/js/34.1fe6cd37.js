(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{445:function(s,t,v){"use strict";v.r(t);var e=v(2),_=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"什么是构建工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是构建工具"}},[s._v("#")]),s._v(" 什么是构建工具")]),s._v(" "),t("h2",{attrs:{id:"企业级项目里都可能会具备哪些功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#企业级项目里都可能会具备哪些功能"}},[s._v("#")]),s._v(" 企业级项目里都可能会具备哪些功能")]),s._v(" "),t("ol",[t("li",[s._v("typescript：如果遇到ts文件我们需要使用tsc将typescript代码转换为js代码")]),s._v(" "),t("li",[s._v("Vue/React：浏览器不认识，就需要安装vue-compliter/react-compliter，将jsx文件或者.vue文件转换为render函数")]),s._v(" "),t("li",[s._v("less/sass：需要安装less-loader/sass-loader等一系列编译工具")]),s._v(" "),t("li",[s._v("语法降级：balel ---\x3e 将es的新语法转换旧版浏览器可以接受的语法")]),s._v(" "),t("li",[s._v("体积优化：压缩代码，需要使用uglifyjs --- > 将我们的代码进行压缩变成体积更小性能更高的文件")]),s._v(" "),t("li",[s._v("。。。。。。")])]),s._v(" "),t("p",[s._v("只要稍微改一点东西就会很麻烦")]),s._v(" "),t("p",[s._v("比如编译一个vue文件：vue（ts）--- tsc --- vue（js） --- vue-complier --- js文件")]),s._v(" "),t("p",[s._v("此时就希望有一个东西可以帮助你吧tsc，vue-complier，less，babel，uglifyjs 等全部继承到一起。")]),s._v(" "),t("p",[s._v("我们就只需要关注自己写的代码就可以了")]),s._v(" "),t("p",[s._v("代码一改变---------有人帮我们去自动把tsc，vue-complier，less，babel，uglifyjs 等全部挨个执行一遍------js       ==============》 "),t("strong",[s._v("构建工具")])]),s._v(" "),t("h2",{attrs:{id:"构建工具工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建工具工作"}},[s._v("#")]),s._v(" 构建工具工作")]),s._v(" "),t("blockquote",[t("p",[s._v("打包：将我们写的浏览器不认识的代码，交给构建工具进行编译处理的过程就叫做打包，打包完成以后会给我们一个浏览器可以认识的文件（html、css、js）")])]),s._v(" "),t("ol",[t("li",[s._v("模块化开发支持")]),s._v(" "),t("li",[s._v("处理代码兼容性：比如：babel、less，tsc，构建工具将这些语法对应的处理工具集成进来自动化处理")]),s._v(" "),t("li",[s._v("提高项目的性能：压缩文件，"),t("strong",[s._v("代码分割")])]),s._v(" "),t("li",[s._v("优化开发体验：\n"),t("ul",[t("li",[s._v("构建工具会帮你自动监听文件的变化，当文件变化以后自动帮你调用对应的集成工具进行重新打包，然后在浏览器重新运行（热更新）")]),s._v(" "),t("li",[s._v("开发服务器：解决跨域问题 ？？？")])])])]),s._v(" "),t("p",[s._v("构建工具让我们不用每次都关心我们的代码在浏览器如何运行，我们只需要首次给构建工具提供一个配置文件（之歌配置文件也不是必须的，如果我不给他 他会有默认配置处理），有了这个集成的配置文件之后，我们就可以在下次需要更新的时候调用一次对应的命令就好了。如果我们再结合热更新，我们就不需要管任何东西了。这就是构建工具去做的东西。")]),s._v(" "),t("h4",{attrs:{id:"那什么是构建工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#那什么是构建工具"}},[s._v("#")]),s._v(" 那什么是构建工具")]),s._v(" "),t("p",[t("strong",[s._v("构建工作让我们不用关心生产的代码也不用关心代码如何再浏览器运行，只需要关心我们的开发怎么写的爽就可以了")])])])}),[],!1,null,null,null);t.default=_.exports}}]);